// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "Body JSON",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PostAuthLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PostAuthLogin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Exception"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Exception"
                        }
                    }
                }
            }
        },
        "/api/checkout": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checkout Orders"
                ],
                "parameters": [
                    {
                        "description": "Body JSON",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.InsertTransaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Created"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Exception"
                        }
                    }
                }
            }
        },
        "/api/checkout/transactions/country/{country}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checkout Orders"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "country",
                        "name": "country",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit min 1",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset min 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter_transaction_date",
                        "name": "filter_transaction_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.List"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.GetTransactions"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Exception"
                        }
                    }
                }
            }
        },
        "/api/checkout/transactions/{transactionID}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checkout Orders"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "transactionID",
                        "name": "transactionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Exception"
                        }
                    }
                }
            }
        },
        "/api/checkout/transactions/{transactionID}/country/{country}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checkout Orders"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "transactionID",
                        "name": "transactionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "country",
                        "name": "country",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTransactionsByID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Exception"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Body JSON",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PostUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.PostUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PostUserException"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.InsertTransaction": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "transaction_date": {
                    "type": "string"
                },
                "transaction_value": {
                    "type": "number"
                }
            }
        },
        "request.PostAuthLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.PostUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "repeat_password": {
                    "type": "string"
                }
            }
        },
        "response.Created": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "response.Exception": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetTransactions": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "exchange_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "transaction_date": {
                    "type": "string"
                },
                "transaction_value": {
                    "type": "number"
                },
                "transaction_value_converted_to_wish_currency": {
                    "type": "number"
                }
            }
        },
        "response.GetTransactionsByID": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "exchange_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "transaction_date": {
                    "type": "string"
                },
                "transaction_value": {
                    "type": "number"
                },
                "transaction_value_converted_to_wish_currency": {
                    "type": "number"
                }
            }
        },
        "response.List": {
            "type": "object",
            "properties": {
                "data": {},
                "pagination": {
                    "$ref": "#/definitions/response.Pagination"
                }
            }
        },
        "response.Pagination": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.PostAuthLogin": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "response.PostUser": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "response.PostUserException": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "enum": [
                        "COUNTRY",
                        "EMAIL",
                        "PASSWORD",
                        "FORM"
                    ]
                },
                "key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "API Checkout",
	Description:      "API checkout",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
